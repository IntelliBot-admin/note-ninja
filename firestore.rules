rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection and subcollections
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      
      match /categories/{categoryId} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Meetings collection
    match /meetings/{meetingId} {
      allow read: if isAuthenticated() && 
        (resource == null || resource.data.userId == request.auth.uid);
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }

    // Action Items collection
    match /actionItems/{actionItemId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid ||
         (resource.data.meetingId != null && 
          get(/databases/$(database)/documents/meetings/$(resource.data.meetingId)).data.userId == request.auth.uid));
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }

    // Kanban columns collection
    match /kanbanColumns/{columnId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }

    // Vector store collection
    match /vectorStore/{docId} {
      allow read: if isAuthenticated() && 
        resource.data.metadata.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.metadata.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        resource.data.metadata.userId == request.auth.uid;
    }
  }
}