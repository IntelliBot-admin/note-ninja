rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Meetings collection
    match /meetings/{meetingId} {
      allow read: if isAuthenticated() && 
        (resource == null || resource.data.userId == request.auth.uid);
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Action Items collection
    match /actionItems/{actionItemId} {
      allow read: if isAuthenticated() && 
        get(/databases/$(database)/documents/meetings/$(resource.data.meetingId)).data.userId == request.auth.uid;
      
      allow create: if isAuthenticated();
      
      allow update, delete: if isAuthenticated() && 
        get(/databases/$(database)/documents/meetings/$(resource.data.meetingId)).data.userId == request.auth.uid;
    }
    
    // Users collection
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Stripe-related collections
    match /customers/{uid} {
      allow read: if request.auth.uid == uid;

      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid;
      }
      match /subscriptions/{id} {
        allow read: if request.auth.uid == uid;
      }
      match /payments/{id} {
        allow read: if request.auth.uid == uid;
      }
    }

    match /products/{id} {
      allow read: if true;

      match /prices/{id} {
        allow read: if true;
      }

      match /tax_rates/{id} {
        allow read: if true;
      }
    }
  }
}